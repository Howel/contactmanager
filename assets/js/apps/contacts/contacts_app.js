// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

ContactManager.module('ContactsApp', function(ContactsApp, ContactManager, Backbone, Marionette, $, _) {
  return ContactsApp.Router = (function(_super) {
    var API;

    __extends(Router, _super);

    function Router() {
      return Router.__super__.constructor.apply(this, arguments);
    }

    Router.prototype.appRoutes = {
      'contacts': 'listContacts',
      'contacts/:id': 'showContact',
      'contacts/:id/edit': 'editContact'
    };

    API = {
      listContacts: function() {
        return ContactsApp.List.Controller.listContacts();
      },
      showContact: function(id) {
        return ContactsApp.Show.Controller.showContact(id);
      },
      editContact: function(id) {
        return ContactsApp.Edit.Controller.editContact(id);
      }
    };

    ContactManager.on('contacts:list', function() {
      ContactManager.navigate('contacts');
      return API.listContacts();
    });

    ContactManager.on('contact:show', function(id) {
      ContactManager.navigate("contacts/" + id);
      return API.showContact(id);
    });

    ContactManager.on('contact:edit', function(id) {
      ContactManager.navigate("contacts/" + id + "/edit");
      return API.editContact(id);
    });

    ContactManager.addInitializer(function() {
      return new ContactsApp.Router({
        controller: API
      });
    });

    return Router;

  })(Marionette.AppRouter);
});
